// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: belifeline/v1/main.proto

package mainv1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/halcyon-org/kizuna/gen/belifeline/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// BeLifelineServiceName is the fully-qualified name of the BeLifelineService service.
	BeLifelineServiceName = "belifeline.v1.BeLifelineService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// BeLifelineServiceClientCreateProcedure is the fully-qualified name of the BeLifelineService's
	// ClientCreate RPC.
	BeLifelineServiceClientCreateProcedure = "/belifeline.v1.BeLifelineService/ClientCreate"
	// BeLifelineServiceClientListProcedure is the fully-qualified name of the BeLifelineService's
	// ClientList RPC.
	BeLifelineServiceClientListProcedure = "/belifeline.v1.BeLifelineService/ClientList"
	// BeLifelineServiceClientDeleteProcedure is the fully-qualified name of the BeLifelineService's
	// ClientDelete RPC.
	BeLifelineServiceClientDeleteProcedure = "/belifeline.v1.BeLifelineService/ClientDelete"
	// BeLifelineServiceClientRevokeProcedure is the fully-qualified name of the BeLifelineService's
	// ClientRevoke RPC.
	BeLifelineServiceClientRevokeProcedure = "/belifeline.v1.BeLifelineService/ClientRevoke"
	// BeLifelineServiceExtInfoCreateProcedure is the fully-qualified name of the BeLifelineService's
	// ExtInfoCreate RPC.
	BeLifelineServiceExtInfoCreateProcedure = "/belifeline.v1.BeLifelineService/ExtInfoCreate"
	// BeLifelineServiceExtInfoListProcedure is the fully-qualified name of the BeLifelineService's
	// ExtInfoList RPC.
	BeLifelineServiceExtInfoListProcedure = "/belifeline.v1.BeLifelineService/ExtInfoList"
	// BeLifelineServiceExtInfoDeleteProcedure is the fully-qualified name of the BeLifelineService's
	// ExtInfoDelete RPC.
	BeLifelineServiceExtInfoDeleteProcedure = "/belifeline.v1.BeLifelineService/ExtInfoDelete"
	// BeLifelineServiceKoyoCreateProcedure is the fully-qualified name of the BeLifelineService's
	// KoyoCreate RPC.
	BeLifelineServiceKoyoCreateProcedure = "/belifeline.v1.BeLifelineService/KoyoCreate"
	// BeLifelineServiceKoyoListProcedure is the fully-qualified name of the BeLifelineService's
	// KoyoList RPC.
	BeLifelineServiceKoyoListProcedure = "/belifeline.v1.BeLifelineService/KoyoList"
	// BeLifelineServiceKoyoDeleteProcedure is the fully-qualified name of the BeLifelineService's
	// KoyoDelete RPC.
	BeLifelineServiceKoyoDeleteProcedure = "/belifeline.v1.BeLifelineService/KoyoDelete"
	// BeLifelineServiceKoyoApiRevokeProcedure is the fully-qualified name of the BeLifelineService's
	// KoyoApiRevoke RPC.
	BeLifelineServiceKoyoApiRevokeProcedure = "/belifeline.v1.BeLifelineService/KoyoApiRevoke"
	// BeLifelineServiceHealthProcedure is the fully-qualified name of the BeLifelineService's Health
	// RPC.
	BeLifelineServiceHealthProcedure = "/belifeline.v1.BeLifelineService/Health"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	beLifelineServiceServiceDescriptor             = v1.File_belifeline_v1_main_proto.Services().ByName("BeLifelineService")
	beLifelineServiceClientCreateMethodDescriptor  = beLifelineServiceServiceDescriptor.Methods().ByName("ClientCreate")
	beLifelineServiceClientListMethodDescriptor    = beLifelineServiceServiceDescriptor.Methods().ByName("ClientList")
	beLifelineServiceClientDeleteMethodDescriptor  = beLifelineServiceServiceDescriptor.Methods().ByName("ClientDelete")
	beLifelineServiceClientRevokeMethodDescriptor  = beLifelineServiceServiceDescriptor.Methods().ByName("ClientRevoke")
	beLifelineServiceExtInfoCreateMethodDescriptor = beLifelineServiceServiceDescriptor.Methods().ByName("ExtInfoCreate")
	beLifelineServiceExtInfoListMethodDescriptor   = beLifelineServiceServiceDescriptor.Methods().ByName("ExtInfoList")
	beLifelineServiceExtInfoDeleteMethodDescriptor = beLifelineServiceServiceDescriptor.Methods().ByName("ExtInfoDelete")
	beLifelineServiceKoyoCreateMethodDescriptor    = beLifelineServiceServiceDescriptor.Methods().ByName("KoyoCreate")
	beLifelineServiceKoyoListMethodDescriptor      = beLifelineServiceServiceDescriptor.Methods().ByName("KoyoList")
	beLifelineServiceKoyoDeleteMethodDescriptor    = beLifelineServiceServiceDescriptor.Methods().ByName("KoyoDelete")
	beLifelineServiceKoyoApiRevokeMethodDescriptor = beLifelineServiceServiceDescriptor.Methods().ByName("KoyoApiRevoke")
	beLifelineServiceHealthMethodDescriptor        = beLifelineServiceServiceDescriptor.Methods().ByName("Health")
)

// BeLifelineServiceClient is a client for the belifeline.v1.BeLifelineService service.
type BeLifelineServiceClient interface {
	ClientCreate(context.Context, *connect.Request[v1.ClientCreateRequest]) (*connect.Response[v1.ClientCreateResponse], error)
	ClientList(context.Context, *connect.Request[v1.ClientListRequest]) (*connect.ServerStreamForClient[v1.ClientListResponse], error)
	ClientDelete(context.Context, *connect.Request[v1.ClientDeleteRequest]) (*connect.Response[v1.ClientDeleteResponse], error)
	ClientRevoke(context.Context, *connect.Request[v1.ClientRevokeRequest]) (*connect.Response[v1.ClientRevokeResponse], error)
	ExtInfoCreate(context.Context, *connect.Request[v1.ExtInfoCreateRequest]) (*connect.Response[v1.ExtInfoCreateResponse], error)
	ExtInfoList(context.Context, *connect.Request[v1.ExtInfoListRequest]) (*connect.ServerStreamForClient[v1.ExtInfoListResponse], error)
	ExtInfoDelete(context.Context, *connect.Request[v1.ExtInfoDeleteRequest]) (*connect.Response[v1.ExtInfoDeleteResponse], error)
	KoyoCreate(context.Context, *connect.Request[v1.KoyoCreateRequest]) (*connect.Response[v1.KoyoCreateResponse], error)
	KoyoList(context.Context, *connect.Request[v1.KoyoListRequest]) (*connect.ServerStreamForClient[v1.KoyoListResponse], error)
	KoyoDelete(context.Context, *connect.Request[v1.KoyoDeleteRequest]) (*connect.Response[v1.KoyoDeleteResponse], error)
	KoyoApiRevoke(context.Context, *connect.Request[v1.KoyoApiRevokeRequest]) (*connect.Response[v1.KoyoApiRevokeResponse], error)
	Health(context.Context, *connect.Request[v1.HealthRequest]) (*connect.Response[v1.HealthResponse], error)
}

// NewBeLifelineServiceClient constructs a client for the belifeline.v1.BeLifelineService service.
// By default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped
// responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewBeLifelineServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) BeLifelineServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &beLifelineServiceClient{
		clientCreate: connect.NewClient[v1.ClientCreateRequest, v1.ClientCreateResponse](
			httpClient,
			baseURL+BeLifelineServiceClientCreateProcedure,
			connect.WithSchema(beLifelineServiceClientCreateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		clientList: connect.NewClient[v1.ClientListRequest, v1.ClientListResponse](
			httpClient,
			baseURL+BeLifelineServiceClientListProcedure,
			connect.WithSchema(beLifelineServiceClientListMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		clientDelete: connect.NewClient[v1.ClientDeleteRequest, v1.ClientDeleteResponse](
			httpClient,
			baseURL+BeLifelineServiceClientDeleteProcedure,
			connect.WithSchema(beLifelineServiceClientDeleteMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		clientRevoke: connect.NewClient[v1.ClientRevokeRequest, v1.ClientRevokeResponse](
			httpClient,
			baseURL+BeLifelineServiceClientRevokeProcedure,
			connect.WithSchema(beLifelineServiceClientRevokeMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		extInfoCreate: connect.NewClient[v1.ExtInfoCreateRequest, v1.ExtInfoCreateResponse](
			httpClient,
			baseURL+BeLifelineServiceExtInfoCreateProcedure,
			connect.WithSchema(beLifelineServiceExtInfoCreateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		extInfoList: connect.NewClient[v1.ExtInfoListRequest, v1.ExtInfoListResponse](
			httpClient,
			baseURL+BeLifelineServiceExtInfoListProcedure,
			connect.WithSchema(beLifelineServiceExtInfoListMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		extInfoDelete: connect.NewClient[v1.ExtInfoDeleteRequest, v1.ExtInfoDeleteResponse](
			httpClient,
			baseURL+BeLifelineServiceExtInfoDeleteProcedure,
			connect.WithSchema(beLifelineServiceExtInfoDeleteMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		koyoCreate: connect.NewClient[v1.KoyoCreateRequest, v1.KoyoCreateResponse](
			httpClient,
			baseURL+BeLifelineServiceKoyoCreateProcedure,
			connect.WithSchema(beLifelineServiceKoyoCreateMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		koyoList: connect.NewClient[v1.KoyoListRequest, v1.KoyoListResponse](
			httpClient,
			baseURL+BeLifelineServiceKoyoListProcedure,
			connect.WithSchema(beLifelineServiceKoyoListMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		koyoDelete: connect.NewClient[v1.KoyoDeleteRequest, v1.KoyoDeleteResponse](
			httpClient,
			baseURL+BeLifelineServiceKoyoDeleteProcedure,
			connect.WithSchema(beLifelineServiceKoyoDeleteMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		koyoApiRevoke: connect.NewClient[v1.KoyoApiRevokeRequest, v1.KoyoApiRevokeResponse](
			httpClient,
			baseURL+BeLifelineServiceKoyoApiRevokeProcedure,
			connect.WithSchema(beLifelineServiceKoyoApiRevokeMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		health: connect.NewClient[v1.HealthRequest, v1.HealthResponse](
			httpClient,
			baseURL+BeLifelineServiceHealthProcedure,
			connect.WithSchema(beLifelineServiceHealthMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// beLifelineServiceClient implements BeLifelineServiceClient.
type beLifelineServiceClient struct {
	clientCreate  *connect.Client[v1.ClientCreateRequest, v1.ClientCreateResponse]
	clientList    *connect.Client[v1.ClientListRequest, v1.ClientListResponse]
	clientDelete  *connect.Client[v1.ClientDeleteRequest, v1.ClientDeleteResponse]
	clientRevoke  *connect.Client[v1.ClientRevokeRequest, v1.ClientRevokeResponse]
	extInfoCreate *connect.Client[v1.ExtInfoCreateRequest, v1.ExtInfoCreateResponse]
	extInfoList   *connect.Client[v1.ExtInfoListRequest, v1.ExtInfoListResponse]
	extInfoDelete *connect.Client[v1.ExtInfoDeleteRequest, v1.ExtInfoDeleteResponse]
	koyoCreate    *connect.Client[v1.KoyoCreateRequest, v1.KoyoCreateResponse]
	koyoList      *connect.Client[v1.KoyoListRequest, v1.KoyoListResponse]
	koyoDelete    *connect.Client[v1.KoyoDeleteRequest, v1.KoyoDeleteResponse]
	koyoApiRevoke *connect.Client[v1.KoyoApiRevokeRequest, v1.KoyoApiRevokeResponse]
	health        *connect.Client[v1.HealthRequest, v1.HealthResponse]
}

// ClientCreate calls belifeline.v1.BeLifelineService.ClientCreate.
func (c *beLifelineServiceClient) ClientCreate(ctx context.Context, req *connect.Request[v1.ClientCreateRequest]) (*connect.Response[v1.ClientCreateResponse], error) {
	return c.clientCreate.CallUnary(ctx, req)
}

// ClientList calls belifeline.v1.BeLifelineService.ClientList.
func (c *beLifelineServiceClient) ClientList(ctx context.Context, req *connect.Request[v1.ClientListRequest]) (*connect.ServerStreamForClient[v1.ClientListResponse], error) {
	return c.clientList.CallServerStream(ctx, req)
}

// ClientDelete calls belifeline.v1.BeLifelineService.ClientDelete.
func (c *beLifelineServiceClient) ClientDelete(ctx context.Context, req *connect.Request[v1.ClientDeleteRequest]) (*connect.Response[v1.ClientDeleteResponse], error) {
	return c.clientDelete.CallUnary(ctx, req)
}

// ClientRevoke calls belifeline.v1.BeLifelineService.ClientRevoke.
func (c *beLifelineServiceClient) ClientRevoke(ctx context.Context, req *connect.Request[v1.ClientRevokeRequest]) (*connect.Response[v1.ClientRevokeResponse], error) {
	return c.clientRevoke.CallUnary(ctx, req)
}

// ExtInfoCreate calls belifeline.v1.BeLifelineService.ExtInfoCreate.
func (c *beLifelineServiceClient) ExtInfoCreate(ctx context.Context, req *connect.Request[v1.ExtInfoCreateRequest]) (*connect.Response[v1.ExtInfoCreateResponse], error) {
	return c.extInfoCreate.CallUnary(ctx, req)
}

// ExtInfoList calls belifeline.v1.BeLifelineService.ExtInfoList.
func (c *beLifelineServiceClient) ExtInfoList(ctx context.Context, req *connect.Request[v1.ExtInfoListRequest]) (*connect.ServerStreamForClient[v1.ExtInfoListResponse], error) {
	return c.extInfoList.CallServerStream(ctx, req)
}

// ExtInfoDelete calls belifeline.v1.BeLifelineService.ExtInfoDelete.
func (c *beLifelineServiceClient) ExtInfoDelete(ctx context.Context, req *connect.Request[v1.ExtInfoDeleteRequest]) (*connect.Response[v1.ExtInfoDeleteResponse], error) {
	return c.extInfoDelete.CallUnary(ctx, req)
}

// KoyoCreate calls belifeline.v1.BeLifelineService.KoyoCreate.
func (c *beLifelineServiceClient) KoyoCreate(ctx context.Context, req *connect.Request[v1.KoyoCreateRequest]) (*connect.Response[v1.KoyoCreateResponse], error) {
	return c.koyoCreate.CallUnary(ctx, req)
}

// KoyoList calls belifeline.v1.BeLifelineService.KoyoList.
func (c *beLifelineServiceClient) KoyoList(ctx context.Context, req *connect.Request[v1.KoyoListRequest]) (*connect.ServerStreamForClient[v1.KoyoListResponse], error) {
	return c.koyoList.CallServerStream(ctx, req)
}

// KoyoDelete calls belifeline.v1.BeLifelineService.KoyoDelete.
func (c *beLifelineServiceClient) KoyoDelete(ctx context.Context, req *connect.Request[v1.KoyoDeleteRequest]) (*connect.Response[v1.KoyoDeleteResponse], error) {
	return c.koyoDelete.CallUnary(ctx, req)
}

// KoyoApiRevoke calls belifeline.v1.BeLifelineService.KoyoApiRevoke.
func (c *beLifelineServiceClient) KoyoApiRevoke(ctx context.Context, req *connect.Request[v1.KoyoApiRevokeRequest]) (*connect.Response[v1.KoyoApiRevokeResponse], error) {
	return c.koyoApiRevoke.CallUnary(ctx, req)
}

// Health calls belifeline.v1.BeLifelineService.Health.
func (c *beLifelineServiceClient) Health(ctx context.Context, req *connect.Request[v1.HealthRequest]) (*connect.Response[v1.HealthResponse], error) {
	return c.health.CallUnary(ctx, req)
}

// BeLifelineServiceHandler is an implementation of the belifeline.v1.BeLifelineService service.
type BeLifelineServiceHandler interface {
	ClientCreate(context.Context, *connect.Request[v1.ClientCreateRequest]) (*connect.Response[v1.ClientCreateResponse], error)
	ClientList(context.Context, *connect.Request[v1.ClientListRequest], *connect.ServerStream[v1.ClientListResponse]) error
	ClientDelete(context.Context, *connect.Request[v1.ClientDeleteRequest]) (*connect.Response[v1.ClientDeleteResponse], error)
	ClientRevoke(context.Context, *connect.Request[v1.ClientRevokeRequest]) (*connect.Response[v1.ClientRevokeResponse], error)
	ExtInfoCreate(context.Context, *connect.Request[v1.ExtInfoCreateRequest]) (*connect.Response[v1.ExtInfoCreateResponse], error)
	ExtInfoList(context.Context, *connect.Request[v1.ExtInfoListRequest], *connect.ServerStream[v1.ExtInfoListResponse]) error
	ExtInfoDelete(context.Context, *connect.Request[v1.ExtInfoDeleteRequest]) (*connect.Response[v1.ExtInfoDeleteResponse], error)
	KoyoCreate(context.Context, *connect.Request[v1.KoyoCreateRequest]) (*connect.Response[v1.KoyoCreateResponse], error)
	KoyoList(context.Context, *connect.Request[v1.KoyoListRequest], *connect.ServerStream[v1.KoyoListResponse]) error
	KoyoDelete(context.Context, *connect.Request[v1.KoyoDeleteRequest]) (*connect.Response[v1.KoyoDeleteResponse], error)
	KoyoApiRevoke(context.Context, *connect.Request[v1.KoyoApiRevokeRequest]) (*connect.Response[v1.KoyoApiRevokeResponse], error)
	Health(context.Context, *connect.Request[v1.HealthRequest]) (*connect.Response[v1.HealthResponse], error)
}

// NewBeLifelineServiceHandler builds an HTTP handler from the service implementation. It returns
// the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewBeLifelineServiceHandler(svc BeLifelineServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	beLifelineServiceClientCreateHandler := connect.NewUnaryHandler(
		BeLifelineServiceClientCreateProcedure,
		svc.ClientCreate,
		connect.WithSchema(beLifelineServiceClientCreateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	beLifelineServiceClientListHandler := connect.NewServerStreamHandler(
		BeLifelineServiceClientListProcedure,
		svc.ClientList,
		connect.WithSchema(beLifelineServiceClientListMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	beLifelineServiceClientDeleteHandler := connect.NewUnaryHandler(
		BeLifelineServiceClientDeleteProcedure,
		svc.ClientDelete,
		connect.WithSchema(beLifelineServiceClientDeleteMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	beLifelineServiceClientRevokeHandler := connect.NewUnaryHandler(
		BeLifelineServiceClientRevokeProcedure,
		svc.ClientRevoke,
		connect.WithSchema(beLifelineServiceClientRevokeMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	beLifelineServiceExtInfoCreateHandler := connect.NewUnaryHandler(
		BeLifelineServiceExtInfoCreateProcedure,
		svc.ExtInfoCreate,
		connect.WithSchema(beLifelineServiceExtInfoCreateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	beLifelineServiceExtInfoListHandler := connect.NewServerStreamHandler(
		BeLifelineServiceExtInfoListProcedure,
		svc.ExtInfoList,
		connect.WithSchema(beLifelineServiceExtInfoListMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	beLifelineServiceExtInfoDeleteHandler := connect.NewUnaryHandler(
		BeLifelineServiceExtInfoDeleteProcedure,
		svc.ExtInfoDelete,
		connect.WithSchema(beLifelineServiceExtInfoDeleteMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	beLifelineServiceKoyoCreateHandler := connect.NewUnaryHandler(
		BeLifelineServiceKoyoCreateProcedure,
		svc.KoyoCreate,
		connect.WithSchema(beLifelineServiceKoyoCreateMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	beLifelineServiceKoyoListHandler := connect.NewServerStreamHandler(
		BeLifelineServiceKoyoListProcedure,
		svc.KoyoList,
		connect.WithSchema(beLifelineServiceKoyoListMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	beLifelineServiceKoyoDeleteHandler := connect.NewUnaryHandler(
		BeLifelineServiceKoyoDeleteProcedure,
		svc.KoyoDelete,
		connect.WithSchema(beLifelineServiceKoyoDeleteMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	beLifelineServiceKoyoApiRevokeHandler := connect.NewUnaryHandler(
		BeLifelineServiceKoyoApiRevokeProcedure,
		svc.KoyoApiRevoke,
		connect.WithSchema(beLifelineServiceKoyoApiRevokeMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	beLifelineServiceHealthHandler := connect.NewUnaryHandler(
		BeLifelineServiceHealthProcedure,
		svc.Health,
		connect.WithSchema(beLifelineServiceHealthMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/belifeline.v1.BeLifelineService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case BeLifelineServiceClientCreateProcedure:
			beLifelineServiceClientCreateHandler.ServeHTTP(w, r)
		case BeLifelineServiceClientListProcedure:
			beLifelineServiceClientListHandler.ServeHTTP(w, r)
		case BeLifelineServiceClientDeleteProcedure:
			beLifelineServiceClientDeleteHandler.ServeHTTP(w, r)
		case BeLifelineServiceClientRevokeProcedure:
			beLifelineServiceClientRevokeHandler.ServeHTTP(w, r)
		case BeLifelineServiceExtInfoCreateProcedure:
			beLifelineServiceExtInfoCreateHandler.ServeHTTP(w, r)
		case BeLifelineServiceExtInfoListProcedure:
			beLifelineServiceExtInfoListHandler.ServeHTTP(w, r)
		case BeLifelineServiceExtInfoDeleteProcedure:
			beLifelineServiceExtInfoDeleteHandler.ServeHTTP(w, r)
		case BeLifelineServiceKoyoCreateProcedure:
			beLifelineServiceKoyoCreateHandler.ServeHTTP(w, r)
		case BeLifelineServiceKoyoListProcedure:
			beLifelineServiceKoyoListHandler.ServeHTTP(w, r)
		case BeLifelineServiceKoyoDeleteProcedure:
			beLifelineServiceKoyoDeleteHandler.ServeHTTP(w, r)
		case BeLifelineServiceKoyoApiRevokeProcedure:
			beLifelineServiceKoyoApiRevokeHandler.ServeHTTP(w, r)
		case BeLifelineServiceHealthProcedure:
			beLifelineServiceHealthHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedBeLifelineServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedBeLifelineServiceHandler struct{}

func (UnimplementedBeLifelineServiceHandler) ClientCreate(context.Context, *connect.Request[v1.ClientCreateRequest]) (*connect.Response[v1.ClientCreateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("belifeline.v1.BeLifelineService.ClientCreate is not implemented"))
}

func (UnimplementedBeLifelineServiceHandler) ClientList(context.Context, *connect.Request[v1.ClientListRequest], *connect.ServerStream[v1.ClientListResponse]) error {
	return connect.NewError(connect.CodeUnimplemented, errors.New("belifeline.v1.BeLifelineService.ClientList is not implemented"))
}

func (UnimplementedBeLifelineServiceHandler) ClientDelete(context.Context, *connect.Request[v1.ClientDeleteRequest]) (*connect.Response[v1.ClientDeleteResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("belifeline.v1.BeLifelineService.ClientDelete is not implemented"))
}

func (UnimplementedBeLifelineServiceHandler) ClientRevoke(context.Context, *connect.Request[v1.ClientRevokeRequest]) (*connect.Response[v1.ClientRevokeResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("belifeline.v1.BeLifelineService.ClientRevoke is not implemented"))
}

func (UnimplementedBeLifelineServiceHandler) ExtInfoCreate(context.Context, *connect.Request[v1.ExtInfoCreateRequest]) (*connect.Response[v1.ExtInfoCreateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("belifeline.v1.BeLifelineService.ExtInfoCreate is not implemented"))
}

func (UnimplementedBeLifelineServiceHandler) ExtInfoList(context.Context, *connect.Request[v1.ExtInfoListRequest], *connect.ServerStream[v1.ExtInfoListResponse]) error {
	return connect.NewError(connect.CodeUnimplemented, errors.New("belifeline.v1.BeLifelineService.ExtInfoList is not implemented"))
}

func (UnimplementedBeLifelineServiceHandler) ExtInfoDelete(context.Context, *connect.Request[v1.ExtInfoDeleteRequest]) (*connect.Response[v1.ExtInfoDeleteResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("belifeline.v1.BeLifelineService.ExtInfoDelete is not implemented"))
}

func (UnimplementedBeLifelineServiceHandler) KoyoCreate(context.Context, *connect.Request[v1.KoyoCreateRequest]) (*connect.Response[v1.KoyoCreateResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("belifeline.v1.BeLifelineService.KoyoCreate is not implemented"))
}

func (UnimplementedBeLifelineServiceHandler) KoyoList(context.Context, *connect.Request[v1.KoyoListRequest], *connect.ServerStream[v1.KoyoListResponse]) error {
	return connect.NewError(connect.CodeUnimplemented, errors.New("belifeline.v1.BeLifelineService.KoyoList is not implemented"))
}

func (UnimplementedBeLifelineServiceHandler) KoyoDelete(context.Context, *connect.Request[v1.KoyoDeleteRequest]) (*connect.Response[v1.KoyoDeleteResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("belifeline.v1.BeLifelineService.KoyoDelete is not implemented"))
}

func (UnimplementedBeLifelineServiceHandler) KoyoApiRevoke(context.Context, *connect.Request[v1.KoyoApiRevokeRequest]) (*connect.Response[v1.KoyoApiRevokeResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("belifeline.v1.BeLifelineService.KoyoApiRevoke is not implemented"))
}

func (UnimplementedBeLifelineServiceHandler) Health(context.Context, *connect.Request[v1.HealthRequest]) (*connect.Response[v1.HealthResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("belifeline.v1.BeLifelineService.Health is not implemented"))
}
